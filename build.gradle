plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.netflix.dgs.codegen" version "5.1.17"
}

ext {
	set('springCloudAzureVersion', "4.2.0")
	set('springCloudVersion', "2021.0.3")
}
group = 'com.worldfamilyenglish'
version = '1.0.0'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.security:spring-security-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	implementation 'com.azure.spring:spring-cloud-azure-starter'
	implementation 'com.azure.spring:spring-cloud-azure-starter-active-directory'
	implementation 'org.liquibase:liquibase-core'

	implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter:5.0.5'
	implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:latest.release"))
	implementation "com.netflix.graphql.dgs:graphql-dgs-extended-scalars"

	implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '10.2.0.jre17'
	implementation 'com.neovisionaries:nv-i18n:1.29'

	implementation 'net.javacrumbs.shedlock:shedlock-spring:4.41.0'
	implementation 'net.javacrumbs.shedlock:shedlock-provider-jdbc-template:4.41.0'

	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:mssqlserver:1.17.3'
	runtimeOnly 'com.h2database:h2'

	compileOnly 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'


}

generateJava{
	schemaPaths = ["${projectDir}/src/main/resources/schema"] // List of directories containing schema files
	packageName = 'com.worldfamilyenglish.vegas' // The package name to use to generate sources
	generateClient = false // Enable generating the type safe query API

	def domainPackage = "com.worldfamilyenglish.vegas.domain."
	typeMapping = [
			"Availability": domainPackage + "Availability",
			"Booking" : domainPackage + "Booking",
			"BookingStatus" : domainPackage + "BookingStatus",
			"ContentPublishingPlan" : domainPackage + "ContentPublishingPlan",
			"CapLevel" : domainPackage + "CapLevel",
			"Child" : domainPackage + "Child",
			"ContentInfo" : domainPackage + "ContentInfo",
			"ContentPerformingAccreditation" : domainPackage + "ContentPerformingAccreditation",
			"DomainUser"  : domainPackage + "DomainUser",
			"Parent" : domainPackage + "Parent",
			"Period"      : domainPackage + "Period",
			"PeriodType"  : domainPackage + "PeriodType",
			"CountryCode" : "com.neovisionaries.i18n.CountryCode"
		]
}

dependencyManagement {
	imports {
		mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

