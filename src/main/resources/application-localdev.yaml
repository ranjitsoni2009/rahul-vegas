spring:
  application:
    profile: localdev

  cloud:
    azure:
      # Properties like spring.cloud.azure.credential.client-id are global properties.
      # Properties like spring.cloud.azure.active-directory.credential.client-id are AAD properties.
      # If AAD properties is not configured, global properties will be used.
      #      credential:
      #        client-id:
      #        client-secret:
      #      profile:
      #        tenant-id:
      active-directory:
        b2c:
          enabled: true
          profile:
            tenant-id: ${SSO_TENANT_ID:a13a8498-c94f-4dac-9cb1-1cbb1e742758}
          app-id-uri: ${VEGAS_SCOPE_URI:https://wfeglobalb2cdev.onmicrosoft.com/vegaslocal}         # If you are using v1.0 token, please configure app-id-uri for `aud` verification
          credential:
            client-id: ${VEGAS_APP_ID:eac65169-2420-4aa8-b806-f525947157c5}           # If you are using v2.0 token, please configure client-id for `aud` verification
          base-uri: ${SSO_BASE_URI:https://wfeglobalb2cdev.b2clogin.com}             # Such as: https://xxxxb2c.b2clogin.com
          user-flows: # is this really needed?, we're not signing directly into this service. This is a resource. Test removing this.
            sign-up-or-sign-in: ${SIGN_UP_OR_SIGN_IN_USER_FLOW_NAME:B2C_1_phone_based_sign_in_and_sign_up}
  datasource:
    url: jdbc:h2:mem:mydb
    username: sa
    password: password
    driverClassName: org.h2.Driver
  jpa:
    properties.hibernate.dialect: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

logging:
  level:
    org:
      springframework:
        security: DEBUG

zoom:
  clientConfig:
    accountId: ${ZOOM_ADMIN_ACCOUNT_ID:BvIjyY4fSIqbn78zGTbM6A}
    clientId: ${ZOOM_ADMIN_CLIENT_ID:Mo9KS8aGRlySfcPCHyVCUQ}
    clientSecret: ${ZOOM_ADMIN_CLIENT_SECRET:0Fxuq3SHjeJypbSIs6cprAUDIk8WqQ9v}
